import Database from 'better-sqlite3';
import { dirname, join } from 'path';
import { fileURLToPath } from 'url';
var __dirname = dirname(fileURLToPath(import.meta.url));
var dbPath = join(__dirname, '..', '..', 'database.sqlite');
// Create database connection
var db = new Database(dbPath);
// Enable foreign keys
db.pragma('foreign_keys = ON');
// Create tables
db.exec("\n  -- Empresa table\n  CREATE TABLE IF NOT EXISTS empresa (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    nombre TEXT,\n    direccion TEXT,\n    telefono TEXT,\n    email TEXT,\n    logo TEXT,\n    qr TEXT,\n    numero_secuencial INTEGER DEFAULT 1\n  );\n\n  -- Clientes table\n  CREATE TABLE IF NOT EXISTS clientes (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    nombre TEXT NOT NULL,\n    email TEXT,\n    telefono TEXT,\n    direccion TEXT,\n    ciudad TEXT,\n    codigo_postal TEXT,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP\n  );\n\n  -- Contratos table\n  CREATE TABLE IF NOT EXISTS contratos (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    numero_contrato TEXT NOT NULL,\n    fecha DATETIME DEFAULT CURRENT_TIMESTAMP,\n    cliente_id INTEGER,\n    tipo_evento TEXT NOT NULL,\n    fecha_evento DATE,\n    hora_inicio TIME,\n    hora_fin TIME,\n    ubicacion TEXT,\n    numero_invitados INTEGER,\n    total DECIMAL(10,2),\n    anticipo DECIMAL(10,2),\n    saldo DECIMAL(10,2),\n    forma_pago TEXT,\n    estado TEXT DEFAULT 'pendiente',\n    notas TEXT,\n    FOREIGN KEY(cliente_id) REFERENCES clientes(id)\n  );\n\n  -- Detalles espec\u00EDficos del evento\n  CREATE TABLE IF NOT EXISTS detalles_evento (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    contrato_id INTEGER,\n    nombre TEXT NOT NULL,\n    valor TEXT,\n    FOREIGN KEY(contrato_id) REFERENCES contratos(id) ON DELETE CASCADE\n  );\n\n  -- Servicios table\n  CREATE TABLE IF NOT EXISTS servicios (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    contrato_id INTEGER,\n    nombre TEXT NOT NULL,\n    descripcion TEXT,\n    precio DECIMAL(10,2),\n    tipo TEXT,\n    duracion INTEGER,\n    FOREIGN KEY(contrato_id) REFERENCES contratos(id) ON DELETE CASCADE\n  );\n\n  -- Items de servicios\n  CREATE TABLE IF NOT EXISTS items_servicio (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    servicio_id INTEGER,\n    nombre TEXT NOT NULL,\n    cantidad INTEGER DEFAULT 1,\n    precio_unitario DECIMAL(10,2),\n    FOREIGN KEY(servicio_id) REFERENCES servicios(id) ON DELETE CASCADE\n  );\n\n  -- Personal de servicios\n  CREATE TABLE IF NOT EXISTS personal_servicio (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    servicio_id INTEGER,\n    nombre TEXT NOT NULL,\n    rol TEXT NOT NULL,\n    FOREIGN KEY(servicio_id) REFERENCES servicios(id) ON DELETE CASCADE\n  );\n\n  -- \u00D3rdenes de trabajo\n  CREATE TABLE IF NOT EXISTS ordenes_trabajo (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    numero_orden TEXT NOT NULL,\n    fecha DATETIME DEFAULT CURRENT_TIMESTAMP,\n    cliente_id INTEGER,\n    especificaciones TEXT,\n    prioridad TEXT DEFAULT 'media',\n    estado TEXT DEFAULT 'pendiente',\n    subtotal DECIMAL(10,2),\n    impuesto DECIMAL(10,2),\n    total DECIMAL(10,2),\n    anticipo DECIMAL(10,2),\n    saldo DECIMAL(10,2),\n    forma_pago TEXT,\n    notas TEXT,\n    FOREIGN KEY(cliente_id) REFERENCES clientes(id)\n  );\n\n  -- Items de \u00F3rdenes de trabajo\n  CREATE TABLE IF NOT EXISTS items_orden (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    orden_id INTEGER,\n    tipo TEXT NOT NULL,\n    talla TEXT,\n    color TEXT,\n    cantidad INTEGER DEFAULT 1,\n    tipo_impresion TEXT,\n    impresion_frente BOOLEAN DEFAULT 0,\n    impresion_atras BOOLEAN DEFAULT 0,\n    descripcion TEXT,\n    FOREIGN KEY(orden_id) REFERENCES ordenes_trabajo(id) ON DELETE CASCADE\n  );\n\n  -- Rifas\n  CREATE TABLE IF NOT EXISTS rifas (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    titulo TEXT NOT NULL,\n    descripcion TEXT,\n    fecha_inicio DATE,\n    fecha_sorteo DATE,\n    precio_boleto DECIMAL(10,2),\n    numero_inicio INTEGER,\n    numero_fin INTEGER,\n    imagen TEXT,\n    estado TEXT DEFAULT 'activa'\n  );\n\n  -- Boletos\n  CREATE TABLE IF NOT EXISTS boletos (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    rifa_id INTEGER,\n    numero INTEGER NOT NULL,\n    nombre_comprador TEXT,\n    telefono_comprador TEXT,\n    direccion_comprador TEXT,\n    fecha_venta DATETIME,\n    estado TEXT DEFAULT 'disponible',\n    FOREIGN KEY(rifa_id) REFERENCES rifas(id) ON DELETE CASCADE\n  );\n");
console.log('Database schema created successfully');
export default db;
